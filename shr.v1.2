


import os as os

import requests as requests

import json as json

import time as time

import subprocess as subprocess

import asyncio as asyncio

import aiohttp as aiohttp

import threading as threading

import psutil as psutil

import crypto as crypto

from colorama import init, Fore, Style as Style

init()

IIIllllIllIlIlllIl = 'server_links.txt'

lIIIlllIllIllllIll = 'accounts.txt'

lIIIlIIlIllIlIIlll = 'config.json'

llIllllllllllIllll = None

lllIllIIlllllIlIll = None

IIlIllIIlIllIIlIlI = None

lllIIIlIlllIllIIII = False

IIlllIlIIIIlIlIIll = None

lIIlIIIllIlIIlllII = 'https://shiroo.pythonanywhere.com/notify_active_users'



def lIlIIlllIllIlllllI():

    os.system('cls' if os.name == 'nt' else 'clear')

    lIlIIIlIIIIlIllIII = "\n  _____ _             _   _               ____       _       _       \n |  ___| | ___   __ _| |_(_)_ __   __ _  |  _ \\ ___ (_) ___ (_)_ __  \n | |_  | |/ _ \\ / _` | __| | '_ \\ / _` | | |_) / _ \\| |/ _ \\| | '_ \\ \n |  _| | | (_) | (_| | |_| | | | | (_| | |  _ <  __/| | (_) | | | | |\n |_|   |_|\\___/ \\__,_|\\__|_|_| |_|\\__, | |_| \\_\\___|/ |\\___/|_|_| |_|\n                                  |___/           |__/               \n"

    print(Fore.BLUE + lIlIIIlIIIIlIllIII + Style.RESET_ALL)

    print(Fore.CYAN + 'Made by not.shiroo' + Style.RESET_ALL)



def IlIIIIlIIlIIllIlII():

    try:

        llIIllIIIlIlIIllll = requests.post(lIIlIIIllIlIIlllII)

        if llIIllIIIlIlIIllll.status_code != 200:

            pass

    except Exception:

        pass



def IIIIIIllIIlIlIllIl():

    lIllIIIlIlIIlllIll = []

    for lIllIlIlIlllIllIlI in ['u', 'v', 'w', 'x', 'y', 'z', 'p', 'q', 'r', 's']:

        lIllllllIlllIlIlll = f'com.roblox.clien{lIllIlIlIlllIllIlI}'

        print(f'Checking for package: {lIllllllIlllIlIlll}')

        if os.system(f"pm list packages | grep -q '{lIllllllIlllIlIlll}'") == 0:

            print(f'Found package: {lIllllllIlllIlIlll}')

            lIllIIIlIlIIlllIll.append(lIllllllIlllIlIlll)

    return lIllIIIlIlIIlllIll



def lIlllIllllIlllIllI():

    lIIIIIlIIIlIlIllIl = '/data/data/com.termux/files/home/screenshot.png'

    os.system(f'screencap -p {lIIIIIlIIIlIlIllIl}')

    return lIIIIIlIIIlIlIllIl



def lIlIIIIllllIlIIllI():

    IlIlIIllIlIlIllIII = psutil.cpu_percent(interval=1)

    lIlIllIIIllIlIIlIl = psutil.virtual_memory()

    IlIIIlIlIlIllllllI = time.time() - psutil.boot_time()

    lIllIllllIllIllIIl = {'cpu_usage': IlIlIIllIlIlIllIII, 'memory_total': lIlIllIIIllIlIIlIl.total, 'memory_available': lIlIllIIIllIlIIlIl.available, 'memory_used': lIlIllIIIllIlIIlIl.used, 'uptime': IlIIIlIlIlIllllllI}

    return lIllIllllIllIllIIl



def lIllllIlIlllIIlIII():

    global llIllllllllllIllll, lllIllIIlllllIlIll, IIlIllIIlIllIIlIlI

    if os.path.exists(lIIIlIIlIllIlIIlll):

        with open(lIIIlIIlIllIlIIlll, 'r') as IllllllIllIlllllIl:

            IlllllIlIllIlIlIIl = json.load(IllllllIllIlllllIl)

            llIllllllllllIllll = IlllllIlIllIlIlIIl.get('webhook_url')

            lllIllIIlllllIlIll = IlllllIlIllIlIlIIl.get('device_name')

            IIlIllIIlIllIIlIlI = IlllllIlIllIlIlIIl.get('interval')

    else:

        llIllllllllllIllll = None

        lllIllIIlllllIlIll = None

        IIlIllIIlIllIIlIlI = None



def IIllllIIIlIllIlIlI():

    IlllllIlIllIlIlIIl = {'webhook_url': llIllllllllllIllll, 'device_name': lllIllIIlllllIlIll, 'interval': IIlIllIIlIllIIlIlI}

    with open(lIIIlIIlIllIlIIlll, 'w') as IllllllIllIlllllIl:

        json.dump(IlllllIlIllIlIlIIl, IllllllIllIlllllIl)



def IlIIllllIllllIIIIl():

    global IIlllIlIIIIlIlIIll, lllIIIlIlllIllIIII

    if IIlllIlIIIIlIlIIll is None or not IIlllIlIIIIlIlIIll.is_alive():

        lllIIIlIlllIllIIII = False

        IIlllIlIIIIlIlIIll = threading.Thread(target=IlIllllIIlllllIIIl)

        IIlllIlIIIIlIlIIll.start()



def IIIlIIIlIIllIllIlI():

    IIIllIlIlIlIlllIlI = 0

    for IIlIIlIlIIlIllIlIl in psutil.process_iter(['name']):

        if 'roblox' in IIlIIlIlIIlIllIlIl.info['name'].lower():

            IIIllIlIlIlIlllIlI += 1

    return IIIllIlIlIlIlllIlI



def IlIllllIIlllllIIIl():

    global lllIIIlIlllIllIIII

    while not lllIIIlIlllIllIIII:

        lIIIIIlIIIlIlIllIl = lIlllIllllIlllIllI()

        lIllIllllIllIllIIl = lIlIIIIllllIlIIllI()

        IIIlIIllIIlIlllIll = IIIlIIIlIIllIllIlI()

        IIIlIIIIlIlIIlllII = {'title': f'System Info for {lllIllIIlllllIlIll}', 'color': 15258703, 'fields': [{'name': 'Device Name', 'value': lllIllIIlllllIlIll, 'inline': True}, {'name': 'CPU Usage', 'value': f"{lIllIllllIllIllIIl['cpu_usage']}%", 'inline': True}, {'name': 'Memory Used', 'value': f"{lIllIllllIllIllIIl['memory_used'] / lIllIllllIllIllIIl['memory_total'] * 100:.2f}%", 'inline': True}, {'name': 'Memory Available', 'value': f"{lIllIllllIllIllIIl['memory_available'] / lIllIllllIllIllIIl['memory_total'] * 100:.2f}%", 'inline': True}, {'name': 'Total Memory', 'value': f"{lIllIllllIllIllIIl['memory_total'] / 1024 ** 3:.2f} GB", 'inline': True}, {'name': 'Uptime', 'value': f"{lIllIllllIllIllIIl['uptime'] / 3600:.2f} hours", 'inline': True}, {'name': 'Open Roblox Packages', 'value': f'{IIIlIIllIIlIlllIll}', 'inline': True}], 'image': {'url': 'attachment://screenshot.png'}}

        IlIlIIllIIlIlllIIl = {'embeds': [IIIlIIIIlIlIIlllII], 'username': lllIllIIlllllIlIll}

        with open(lIIIIIlIIIlIlIllIl, 'rb') as IllllllIllIlllllIl:

            llIIllIIIlIlIIllll = requests.post(llIllllllllllIllll, data={'payload_json': json.dumps(IlIlIIllIIlIlllIIl)}, files={'file': ('screenshot.png', IllllllIllIlllllIl)})

        if llIIllIIIlIlIIllll.status_code == 204 or llIIllIIIlIlIIllll.status_code == 200:

            print(Fore.GREEN + 'Webhook sent successfully!' + Style.RESET_ALL)

        else:

            print(Fore.RED + f'Failed to send webhook, status code: {llIIllIIIlIlIIllll.status_code}' + Style.RESET_ALL)

        try:

            os.remove(lIIIIIlIIIlIlIllIl)

        except Exception as IIlIlIIlIllIlIlIll:

            print(Fore.RED + f'Error deleting screenshot file: {IIlIlIIlIllIlIlIll}' + Style.RESET_ALL)

        time.sleep(IIlIllIIlIllIIlIlI * 60)



def llIIllIlIIIIIIlIII():

    global lllIIIlIlllIllIIII

    lllIIIlIlllIllIIII = True



def IIIllIlIIIIIIIIllI():

    global llIllllllllllIllll, lllIllIIlllllIlIll, IIlIllIIlIllIIlIlI, lllIIIlIlllIllIIII

    lllIIIlIlllIllIIII = True

    llIllllllllllIllll = input(Fore.GREEN + 'Enter the Discord webhook URL: ' + Style.RESET_ALL)

    lllIllIIlllllIlIll = input(Fore.GREEN + 'Enter the device name: ' + Style.RESET_ALL)

    IIlIllIIlIllIIlIlI = int(input(Fore.GREEN + 'Enter the interval in minutes for sending the webhook: ' + Style.RESET_ALL))

    IIllllIIIlIllIlIlI()

    lllIIIlIlllIllIIII = False

    threading.Thread(target=IlIllllIIlllllIIIl).start()



def lllIllIlIlllIllIIl(lIllllllIlllIlIlll):

    for IIlIIlIlIIlIllIlIl in psutil.process_iter(['name']):

        if lIllllllIlllIlIlll in IIlIIlIlIIlIllIlIl.info['name'].lower():

            return True

    return False



def IlIIlIIlIIIIlIIllI():

    print('Killing all Roblox processes...')

    llllIIlllIllIIllII = IIIIIIllIIlIlIllIl()

    for lIllllllIlllIlIlll in llllIIlllIllIIllII:

        print(f'Trying to kill process for package: {lIllllllIlllIlIlll}')

        os.system(f'pkill -f {lIllllllIlllIlIlll}')

    time.sleep(2)



def IllIlIIIllllIllIlI(lIllllllIlllIlIlll):

    print(f'Killing Roblox process for {lIllllllIlllIlIlll}...')

    os.system(f'pkill -f {lIllllllIlllIlIlll}')

    time.sleep(2)



def IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI):

    try:

        subprocess.run(['am', 'start', '-n', f'{lIllllllIlllIlIlll}/com.roblox.client.startup.ActivitySplash', '-d', IlllIIIlIIlllIllII], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

        print(f'Opening Roblox for {lIllllllIlllIlIlll}...')

        time.sleep(15 if IIIllIlIlIlllllllI >= 6 else 8)

        subprocess.run(['am', 'start', '-n', f'{lIllllllIlllIlIlll}/com.roblox.client.ActivityProtocolLaunch', '-d', IlllIIIlIIlllIllII], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

        print(f'Joining Roblox for {lIllllllIlllIlIlll}...')

        time.sleep(20)

    except Exception as IIlIlIIlIllIlIlIll:

        print(f'Error launching Roblox for {lIllllllIlllIlIlll}: {IIlIlIIlIllIlIlIll}')



def IllIIIIllIlIIlIIlI(IlIlIIIIlIIlllIlIl):

    if 'roblox.com' in IlIlIIIIlIIlllIlIl:

        return IlIlIIIIlIIlllIlIl

    elif IlIlIIIIlIIlllIlIl.isdigit():

        return f'roblox://placeID={IlIlIIIIlIIlllIlIl}'

    else:

        print(Fore.RED + 'Invalid input! Please enter a valid game ID or private server link.' + Style.RESET_ALL)

        return None



def IIIlIIlIIllIlIIlIl(IIIllIlllllIlIIlll):

    with open(IIIllllIllIlIlllIl, 'w') as IllllllIllIlllllIl:

        for (IIlllIIlllIlIllIlI, llIlIllIlIlllIIIII) in IIIllIlllllIlIIlll:

            IllllllIllIlllllIl.write(f'{IIlllIIlllIlIllIlI},{llIlIllIlIlllIIIII}\n')



def IllIlIllllIIIIlIlI():

    IIIllIlllllIlIIlll = []

    if os.path.exists(IIIllllIllIlIlllIl):

        with open(IIIllllIllIlIlllIl, 'r') as IllllllIllIlllllIl:

            for llIIIIlIIlllllIIIl in IllllllIllIlllllIl:

                (IIlllIIlllIlIllIlI, llIlIllIlIlllIIIII) = llIIIIlIIlllllIIIl.strip().split(',', 1)

                IIIllIlllllIlIIlll.append((IIlllIIlllIlIllIlI, llIlIllIlIlllIIIII))

    return IIIllIlllllIlIIlll



def llllllIlllIIIIIlIl(IlllllllllIlIIIIlI):

    with open(lIIIlllIllIllllIll, 'w') as IllllllIllIlllllIl:

        for (IIlllIIlllIlIllIlI, lIIlIllllIlIlIIIlI) in IlllllllllIlIIIIlI:

            IllllllIllIlllllIl.write(f'{IIlllIIlllIlIllIlI},{lIIlIllllIlIlIIIlI}\n')



def IlIlIllIIlIlIllIlI():

    IlllllllllIlIIIIlI = []

    if os.path.exists(lIIIlllIllIllllIll):

        with open(lIIIlllIllIllllIll, 'r') as IllllllIllIlllllIl:

            for llIIIIlIIlllllIIIl in IllllllIllIlllllIl:

                (IIlllIIlllIlIllIlI, lIIlIllllIlIlIIIlI) = llIIIIlIIlllllIIIl.strip().split(',', 1)

                IlllllllllIlIIIIlI.append((IIlllIIlllIlIllIlI, lIIlIllllIlIlIIIlI))

    return IlllllllllIlIIIIlI



def lIlllIIIlIIlIIIIIl(lIIllIIllIIlIIlIII):

    try:

        with open(lIIllIIllIIlIIlIII, 'r') as IllllllIllIlllllIl:

            llllllIIIIIlIlIlII = IllllllIllIlllllIl.read()

            llIIIlIIllIlIIlIlI = llllllIIIIIlIlIlII.find('"UserId":"')

            if llIIIlIIllIlIIlIlI == -1:

                print('Userid not found')

                return None

            llIIIlIIllIlIIlIlI += len('"UserId":"')

            lllllIllIllllIIIll = llllllIIIIIlIlIlII.find('"', llIIIlIIllIlIIlIlI)

            if lllllIllIllllIIIll == -1:

                print('Userid end quote not found')

                return None

            lIllIlIIIllllIIIII = llllllIIIIIlIlIlII[llIIIlIIllIlIIlIlI:lllllIllIllllIIIll]

            return lIllIlIIIllllIIIII

    except IOError as IIlIlIIlIllIlIlIll:

        print(f'Error reading file: {IIlIlIIlIllIlIlIll}')

        return None



async def IasyncioIIl(llIlllIlllIlIllIll):

    lIIlIIllIIllllllII = 'https://users.roblox.com/v1/usernames/users'

    IlIlIIllIIlIlllIIl = {'usernames': [llIlllIlllIlIllIll], 'excludeBannedUsers': True}

    lIllIlIIlllllIllIl = {'Content-Type': 'application/json'}

    async with aiohttp.ClientSession() as lIIllIIIIlIIIlllll:

        async with lIIllIIIIlIIIlllll.post(lIIlIIllIIllllllII, json=IlIlIIllIIlIlllIIl, headers=lIllIlIIlllllIllIl) as llIIllIIIlIlIIllll:

            IIlllIIIlIIIIIlllI = await llIIllIIIlIlIIllll.json()

            if 'data' in IIlllIIIlIIIIIlllI and len(IIlllIIIlIIIIIlllI['data']) > 0:

                return IIlllIIIlIIIIIlllI['data'][0]['id']

    return None



def lIlIlIlllllIlIlIII(lIIlIllllIlIlIIIlI):

    try:

        lIIlIIllIIllllllII = f'https://users.roblox.com/v1/users/{lIIlIllllIlIlIIIlI}'

        llIIllIIIlIlIIllll = requests.get(lIIlIIllIIllllllII)

        llIIllIIIlIlIIllll.raise_for_status()

        IIlllIIIlIIIIIlllI = llIIllIIIlIlIIllll.json()

        return IIlllIIIlIIIIIlllI.get('name', 'Unknown')

    except Exception as IIlIlIIlIllIlIlIll:

        print(f'Error getting username for user ID {lIIlIllllIlIlIIIlI}: {IIlIlIIlIllIlIlIll}')

        return None



def IIlIIllIllllIIllll(lIIlIllllIlIlIIIlI):

    try:

        llIlIllllllIllIIIl = 'https://presence.roblox.com/v1/presence/users'

        lIllIlIIlllllIllIl = {'Content-Type': 'application/json'}

        IllIIIllllIlllIIlI = json.dumps({'userIds': [lIIlIllllIlIlIIIlI]})

        with requests.Session() as lIIllIIIIlIIIlllll:

            IIllIllIlIlIllIIll = lIIllIIIIlIIIlllll.post(llIlIllllllIllIIIl, headers=lIllIlIIlllllIllIl, data=IllIIIllllIlllIIlI, timeout=7)

        IIllIllIlIlIllIIll.raise_for_status()

        IlIIIllIIIIIlIllII = IIllIllIlIlIllIIll.json()

        lIllIlIIIlIIlIlIIl = IlIIIllIIIIIlIllII['userPresences'][0]['userPresenceType']

        IlIIIIIlllllIlIlII = IlIIIllIIIIIlIllII['userPresences'][0].get('lastLocation', None)

        if IlIIIIIlllllIlIlII == 'Website':

            print(Fore.YELLOW + f'{lIIlIllllIlIlIIIlI} is currently on the Website. Rejoin recommended.' + Style.RESET_ALL)

            lIllIlIIIlIIlIlIIl = 0

        return (lIllIlIIIlIIlIlIIl, IlIIIIIlllllIlIlII)

    except Exception as IIlIlIIlIllIlIlIll:

        print(Fore.RED + f'Error checking online status for user {lIIlIllllIlIlIIIlI}: {IIlIlIIlIllIlIlIll}' + Style.RESET_ALL)

        return (None, None)



def IIIlIlllIIIllllIII(lIllllllIlllIlIlll):

    IllllllIlIlllIIIIl = f'/data/data/{lIllllllIlllIlIlll}/app_assets/content/'

    try:

        IlIlIlIlllIlIIIlII = [IllIIIIIIlIlIIIIll for IllIIIIIIlIlIIIIll in os.listdir(IllllllIlIlllIIIIl) if os.path.isfile(os.path.join(IllllllIlIlllIIIIl, IllIIIIIIlIlIIIIll))]

        if not IlIlIlIlllIlIIIlII:

            print(Fore.RED + 'No files found in the specified directory.' + Style.RESET_ALL)

            return None

        llIllllIlIlIlIlIIl = IlIlIlIlllIlIIIlII[-1]

        lIIIlIIIlIIllIlIII = os.path.join(IllllllIlIlllIIIIl, llIllllIlIlIlIlIIl)

        with open(lIIIlIIIlIIllIlIII, 'r') as IllllllIllIlllllIl:

            lllllIllllllIlIIll = IllllllIllIlllllIl.read().strip()

            print(Fore.GREEN + f'HWID found: {lllllIllllllIlIIll}' + Style.RESET_ALL)

            return lllllIllllllIlIIll

    except Exception as IIlIlIIlIllIlIlIll:

        print(Fore.RED + f'Error retrieving HWID: {IIlIlIIlIllIlIlIll}' + Style.RESET_ALL)

        return None



def IlllIIIIllIIIllllI(lllllIllllllIlIIll, lIlIlIIIllIllIllII='shirooapikeyreal'):

    return f'https://shouko-api.neyoshiiuem.workers.dev/bypass?link=https://flux.li/android/external/start.php?HWID={lllllIllllllIlIIll}$&api_key={lIlIlIIIllIllIllII}'



def lllIIIllIllIlIlIIl(lIIlIllllIlIlIIIlI, lIlIlIIIllIllIllII='shirooapikeyreal'):

    return f'http://45.90.13.151:6122/api/bypass?link=https://gateway.platoboost.com/a/8?id={lIIlIllllIlIlIIIlI}&api_key={lIlIlIIIllIllIllII}'



def IIllIIIIIIlllIlllI(IlllllllllIlIIIIlI):

    lIIllIIlIlIlllIIlI = []

    for (lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI) in IlllllllllIlIIIIlI:

        IlIIllllIIIIlllIIl = lllIIIllIllIlIlIIl(lIIlIllllIlIlIIIlI)

        llIlllIlllIlIllIll = lIlIlIlllllIlIlIII(lIIlIllllIlIlIIIlI)

        try:

            llIIllIIIlIlIIllll = requests.get(IlIIllllIIIIlllIIl)

            if llIIllIIIlIlIIllll.status_code == 200:

                lIIllIIlIlIlllIIlI.append((lIllllllIlllIlIlll, llIIllIIIlIlIIllll.json()))

                print(Fore.GREEN + f'{llIlllIlllIlIllIll}: Bypass successful - {llIIllIIIlIlIIllll.json()}' + Style.RESET_ALL)

            else:

                print(Fore.RED + f'{llIlllIlllIlIllIll}: Bypass failed with status code {llIIllIIIlIlIIllll.status_code}' + Style.RESET_ALL)

        except Exception as IIlIlIIlIllIlIlIll:

            print(Fore.RED + f'{llIlllIlllIlIllIll}: Error - {str(IIlIlIIlIllIlIlIll)}' + Style.RESET_ALL)

    return lIIllIIlIlIlllIIlI



def lIIllllIIIIlllllIl():

    lIlIIlllIllIlllllI()

    input(Fore.GREEN + 'Press Enter to continue...' + Style.RESET_ALL)

    lIllllIlIlllIIlIII()

    while True:

        IIllIIlIlllIIlIIII = input(Fore.GREEN + 'Choose setup:\n1. Start Auto Rejoin\n2. Set User IDs for Each Package\n3. Same Game ID or Private Server Link\n4. Different Private Server or Game ID\n5. Clear User IDs and/or Server Links\n6. List\n7. Auto Setup User IDs\n8. Bypass Start \n9. Set Up Webhook\n10. Exit\nEnter choice: ' + Style.RESET_ALL)

        if IIllIIlIlllIIlIIII == '1':

            IIIllIlllllIlIIlll = IllIlIllllIIIIlIlI()

            IlllllllllIlIIIIlI = IlIlIllIIlIlIllIlI()

            if not IlllllllllIlIIIIlI:

                print(Fore.RED + 'No user IDs set up yet! Please set them up before proceeding.' + Style.RESET_ALL)

                continue

            elif not IIIllIlllllIlIIlll:

                print(Fore.RED + 'No game ID or private server link set up yet! Please set them up before proceeding.' + Style.RESET_ALL)

                continue

            lIllIlIIIllllIIllI = int(input('Enter the force rejoin/kill Roblox interval in minutes: ')) * 60

            if llIllllllllllIllll and lllIllIIlllllIlIll and IIlIllIIlIllIIlIlI:

                if IIlllIlIIIIlIlIIll is None or not IIlllIlIIIIlIlIIll.is_alive():

                    IlIIllllIllllIIIIl()

            print('Killing Roblox processes...')

            IlIIlIIlIIIIlIIllI()

            print(Fore.YELLOW + 'Waiting for 5 seconds before starting the rejoin process...' + Style.RESET_ALL)

            time.sleep(5)

            IIIllIlIlIlllllllI = len(IIIllIlllllIlIIlll)

            for (lIllllllIlllIlIlll, IlllIIIlIIlllIllII) in IIIllIlllllIlIIlll:

                IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

            IIllIIllllIIlIllII = time.time()

            while True:

                lIlIIIIIIllIIlllll = time.time()

                for (lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI) in IlllllllllIlIIIIlI:

                    if not lIIlIllllIlIlIIIlI.isdigit():

                        print(f'Retrieving user ID for username: {lIIlIllllIlIlIIIlI}...')

                        lIIlIllllIlIlIIIlI = asyncio.run(IasyncioIIl(lIIlIllllIlIlIIIlI))

                        if lIIlIllllIlIlIIIlI is None:

                            print(Fore.RED + 'Failed to retrieve user ID. Please enter the user ID manually.' + Style.RESET_ALL)

                            lIIlIllllIlIlIIIlI = input('Enter the user ID: ')

                    llIlllIlllIlIllIll = lIlIlIlllllIlIlIII(lIIlIllllIlIlIIIlI) or lIIlIllllIlIlIIIlI

                    (IIIllIIIlIIlllIIll, lIIlllllIllIIIllll) = IIlIIllIllllIIllll(lIIlIllllIlIlIIIlI)

                    if IIIllIIIlIIlllIIll == 2:

                        print(Fore.GREEN + f'{llIlllIlllIlIllIll} ({lIIlIllllIlIlIIIlI}) is currently in-game.' + Style.RESET_ALL)

                    elif not lllIllIlIlllIllIIl(lIllllllIlllIlIlll):

                        print(Fore.RED + f'{lIllllllIlllIlIlll} process has crashed. Relaunching...' + Style.RESET_ALL)

                        IllIlIIIllllIllIlI(lIllllllIlllIlIlll)

                        time.sleep(2)

                        IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

                    elif lIIlllllIllIIIllll == 'Website':

                        print(Fore.RED + f'{llIlllIlllIlIllIll} ({lIIlIllllIlIlIIIlI}) is on the website or has been inactive. Rejoining...' + Style.RESET_ALL)

                        IllIlIIIllllIllIlI(lIllllllIlllIlIlll)

                        time.sleep(2)

                        IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

                    else:

                        print(Fore.YELLOW + f'{llIlllIlllIlIllIll} ({lIIlIllllIlIlIIIlI}) is not in-game but was recently active.' + Style.RESET_ALL)

                    time.sleep(5)

                time.sleep(120)

                if lIlIIIIIIllIIlllll - IIllIIllllIIlIllII >= lIllIlIIIllllIIllI:

                    print('Force killing Roblox processes due to time limit.')

                    IlIIlIIlIIIIlIIllI()

                    IIllIIllllIIlIllII = lIlIIIIIIllIIlllll

                    print(Fore.YELLOW + 'Waiting for 5 seconds before starting the rejoin process...' + Style.RESET_ALL)

                    time.sleep(5)

                    for (lIllllllIlllIlIlll, IlllIIIlIIlllIllII) in IIIllIlllllIlIIlll:

                        IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

        elif IIllIIlIlllIIlIIII == '2':

            IlllllllllIlIIIIlI = []

            lIllIIIlIlIIlllIll = IIIIIIllIIlIlIllIl()

            for lIllllllIlllIlIlll in lIllIIIlIlIIlllIll:

                IlIlIlIllllIllIIlI = input(f'Enter the user ID or username for {lIllllllIlllIlIlll}: ')

                lIIlIllllIlIlIIIlI = None

                if IlIlIlIllllIllIIlI.isdigit():

                    lIIlIllllIlIlIIIlI = IlIlIlIllllIllIIlI

                else:

                    print(f'Retrieving user ID for username: {IlIlIlIllllIllIIlI}...')

                    lIIlIllllIlIlIIIlI = asyncio.run(IasyncioIIl(IlIlIlIllllIllIIlI))

                    if lIIlIllllIlIlIIIlI is None:

                        print(Fore.RED + 'Failed to retrieve user ID. Please enter the user ID manually.' + Style.RESET_ALL)

                        lIIlIllllIlIlIIIlI = input('Enter the user ID: ')

                IlllllllllIlIIIIlI.append((lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI))

                print(f'Set {lIllllllIlllIlIlll} to user ID: {lIIlIllllIlIlIIIlI}')

            llllllIlllIIIIIlIl(IlllllllllIlIIIIlI)

            print(Fore.GREEN + 'User IDs saved!' + Style.RESET_ALL)

        elif IIllIIlIlllIIlIIII == '3':

            IlllIIIlIIlllIllII = input('Enter the game ID or private server link: ')

            lllllIlIIllIllllII = IllIIIIllIlIIlIIlI(IlllIIIlIIlllIllII)

            if lllllIlIIllIllllII:

                lIllIIIlIlIIlllIll = IIIIIIllIIlIlIllIl()

                IIIllIlllllIlIIlll = [(lIllllllIlllIlIlll, lllllIlIIllIllllII) for lIllllllIlllIlIlll in lIllIIIlIlIIlllIll]

                IIIlIIlIIllIlIIlIl(IIIllIlllllIlIIlll)

                print(Fore.GREEN + 'Game ID or private server link saved successfully!' + Style.RESET_ALL)

        elif IIllIIlIlllIIlIIII == '4':

            lIllIIIlIlIIlllIll = IIIIIIllIIlIlIllIl()

            IIIllIlllllIlIIlll = []

            for lIllllllIlllIlIlll in lIllIIIlIlIIlllIll:

                IlllIIIlIIlllIllII = input(f'Enter the game ID or private server link for {lIllllllIlllIlIlll}: ')

                lllllIlIIllIllllII = IllIIIIllIlIIlIIlI(IlllIIIlIIlllIllII)

                if lllllIlIIllIllllII:

                    IIIllIlllllIlIIlll.append((lIllllllIlllIlIlll, lllllIlIIllIllllII))

            IIIlIIlIIllIlIIlIl(IIIllIlllllIlIIlll)

        elif IIllIIlIlllIIlIIII == '5':

            IllllllIlIIlllllIl = input(Fore.GREEN + 'What do you want to clear?\n1. Clear User IDs\n2. Clear Server Links\n3. Clear Both\nEnter choice: ' + Style.RESET_ALL)

            if IllllllIlIIlllllIl == '1':

                if os.path.exists(lIIIlllIllIllllIll):

                    os.remove(lIIIlllIllIllllIll)

                    print(Fore.GREEN + 'User IDs cleared successfully!' + Style.RESET_ALL)

                else:

                    print(Fore.YELLOW + f"No such file: '{lIIIlllIllIllllIll}' found to clear." + Style.RESET_ALL)

            elif IllllllIlIIlllllIl == '2':

                if os.path.exists(IIIllllIllIlIlllIl):

                    os.remove(IIIllllIllIlIlllIl)

                    print(Fore.GREEN + 'Server links cleared successfully!' + Style.RESET_ALL)

                else:

                    print(Fore.YELLOW + f"No such file: '{IIIllllIllIlIlllIl}' found to clear." + Style.RESET_ALL)

            elif IllllllIlIIlllllIl == '3':

                if os.path.exists(lIIIlllIllIllllIll):

                    os.remove(lIIIlllIllIllllIll)

                    print(Fore.GREEN + 'User IDs cleared successfully!' + Style.RESET_ALL)

                else:

                    print(Fore.YELLOW + f"No such file: '{lIIIlllIllIllllIll}' found to clear." + Style.RESET_ALL)

                if os.path.exists(IIIllllIllIlIlllIl):

                    os.remove(IIIllllIllIlIlllIl)

                    print(Fore.GREEN + 'Server links cleared successfully!' + Style.RESET_ALL)

                else:

                    print(Fore.YELLOW + f"No such file: '{IIIllllIllIlIlllIl}' found to clear." + Style.RESET_ALL)

        elif IIllIIlIlllIIlIIII == '6':

            IlllllllllIlIIIIlI = IlIlIllIIlIlIllIlI()

            IIIllIlllllIlIIlll = IllIlIllllIIIIlIlI()

            print(Fore.CYAN + 'Usernames, User IDs, Package Names, and Server Links:' + Style.RESET_ALL)

            for ((lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI), (IllIllIIIllIIIllIl, IlllIIIlIIlllIllII)) in zip(IlllllllllIlIIIIlI, IIIllIlllllIlIIlll):

                llIlllIlllIlIllIll = lIlIlIlllllIlIlIII(lIIlIllllIlIlIIIlI) or lIIlIllllIlIlIIIlI

                print(f'Package Name: {lIllllllIlllIlIlll}, Username: {llIlllIlllIlIllIll}, User ID: {lIIlIllllIlIlIIIlI}, Server Link: {IlllIIIlIIlllIllII}')

        elif IIllIIlIlllIIlIIII == '7':

            print(Fore.GREEN + "Auto Setup User IDs from each package's appStorage.json..." + Style.RESET_ALL)

            lIllIIIlIlIIlllIll = IIIIIIllIIlIlIllIl()

            IlllllllllIlIIIIlI = []

            for lIllllllIlllIlIlll in lIllIIIlIlIIlllIll:

                lIIllIIllIIlIIlIII = f'/data/data/{lIllllllIlllIlIlll}/files/appData/LocalStorage/appStorage.json'

                lIIlIllllIlIlIIIlI = lIlllIIIlIIlIIIIIl(lIIllIIllIIlIIlIII)

                if lIIlIllllIlIlIIIlI:

                    IlllllllllIlIIIIlI.append((lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI))

                    print(f'Found UserId for {lIllllllIlllIlIlll}: {lIIlIllllIlIlIIIlI}')

                else:

                    print(Fore.RED + f'UserId not found for {lIllllllIlllIlIlll}. Make sure the file path is correct and the format is as expected.' + Style.RESET_ALL)

            llllllIlllIIIIIlIl(IlllllllllIlIIIIlI)

            print(Fore.GREEN + 'User IDs saved from appStorage.json!' + Style.RESET_ALL)

            IlllIIIlIIlllIllII = input('Enter the game ID or private server link: ')

            lllllIlIIllIllllII = IllIIIIllIlIIlIIlI(IlllIIIlIIlllIllII)

            if lllllIlIIllIllllII:

                IIIllIlllllIlIIlll = [(lIllllllIlllIlIlll, lllllIlIIllIllllII) for lIllllllIlllIlIlll in lIllIIIlIlIIlllIll]

                IIIlIIlIIllIlIIlIl(IIIllIlllllIlIIlll)

                print(Fore.GREEN + 'Game ID or private server link saved successfully!' + Style.RESET_ALL)

        elif IIllIIlIlllIIlIIII == '8':

            IlllllllllIlIIIIlI = IlIlIllIIlIlIllIlI()

            IIIllIlllllIlIIlll = IllIlIllllIIIIlIlI()

            if not IlllllllllIlIIIIlI:

                print(Fore.RED + 'No user IDs set up yet! Please set them up before proceeding.' + Style.RESET_ALL)

                continue

            lIllIlIIIllllIIllI = int(input('Enter the force rejoin/kill Roblox interval in minutes: ')) * 60

            print(Fore.GREEN + 'Choose the executor:' + Style.RESET_ALL)

            print('1. Delta')

            print('2. Fluxus')

            IlIllIlllllllIIIII = input('Enter your choice (1-2): ')

            if IlIllIlllllllIIIII not in ['1', '2']:

                print(Fore.RED + 'Invalid choice. Please enter a valid option.' + Style.RESET_ALL)

                continue

            print(Fore.GREEN + 'Choose the bypass interval:' + Style.RESET_ALL)

            print('1. Every 30 minutes')

            print('2. Every 1 hour')

            print('3. Every 2 hours')

            print('4. Every 12 hours')

            llllllIlllIIIlIIIl = input('Enter your choice (1-4): ')

            lllIllIllIllIlIlll = {'1': 30 * 60, '2': 60 * 60, '3': 2 * 60 * 60, '4': 12 * 60 * 60}

            llIIlIIlIIlllIllIl = lllIllIllIllIlIlll.get(llllllIlllIIIlIIIl)

            if not llIIlIIlIIlllIllIl:

                print(Fore.RED + 'Invalid choice. Please enter a valid option.' + Style.RESET_ALL)

                continue

            if IlIllIlllllllIIIII == '1':

                llIlIIllllllIlIIlI = IIllIIIIIIlllIlllI(IlllllllllIlIIIIlI)

                if not llIlIIllllllIlIIlI:

                    print(Fore.RED + 'Failed to bypass user IDs. Please try again.' + Style.RESET_ALL)

                    continue

            elif IlIllIlllllllIIIII == '2':

                for (lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI) in IlllllllllIlIIIIlI:

                    lllllIllllllIlIIll = IIIlIlllIIIllllIII(lIllllllIlllIlIlll)

                    if lllllIllllllIlIIll:

                        IlIIllllIIIIlllIIl = IlllIIIIllIIIllllI(lllllIllllllIlIIll)

                        try:

                            llIIllIIIlIlIIllll = requests.get(IlIIllllIIIIlllIIl)

                            if llIIllIIIlIlIIllll.status_code == 200:

                                lIIlIIIIlIllIIIlII = llIIllIIIlIlIIllll.json()

                                print(Fore.GREEN + f'Fluxus Bypass successful for {lIIlIllllIlIlIIIlI} on package {lIllllllIlllIlIlll}.' + Style.RESET_ALL)

                                print(Fore.CYAN + f'Result: {lIIlIIIIlIllIIIlII}' + Style.RESET_ALL)

                            else:

                                print(Fore.RED + f'Fluxus Bypass failed for {lIIlIllllIlIlIIIlI} on package {lIllllllIlllIlIlll} with status code {llIIllIIIlIlIIllll.status_code}.' + Style.RESET_ALL)

                        except Exception as IIlIlIIlIllIlIlIll:

                            print(Fore.RED + f'Error during Fluxus Bypass for {lIIlIllllIlIlIIIlI} on package {lIllllllIlllIlIlll}: {IIlIlIIlIllIlIlIll}' + Style.RESET_ALL)

                    else:

                        print(Fore.RED + f'Failed to retrieve HWID for package {lIllllllIlllIlIlll}.' + Style.RESET_ALL)

            if llIllllllllllIllll and lllIllIIlllllIlIll and IIlIllIIlIllIIlIlI:

                if IIlllIlIIIIlIlIIll is None or not IIlllIlIIIIlIlIIll.is_alive():

                    IlIIllllIllllIIIIl()

            print('Killing Roblox processes...')

            IlIIlIIlIIIIlIIllI()

            print(Fore.YELLOW + 'Waiting for 5 seconds before starting the rejoin process...' + Style.RESET_ALL)

            time.sleep(5)

            IIIllIlIlIlllllllI = len(IIIllIlllllIlIIlll)

            for (lIllllllIlllIlIlll, IlllIIIlIIlllIllII) in IIIllIlllllIlIIlll:

                IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

            IIllIIllllIIlIllII = time.time()

            IlIIlIIIlIIllIIIIl = IIllIIllllIIlIllII

            while True:

                lIlIIIIIIllIIlllll = time.time()

                for (lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI) in IlllllllllIlIIIIlI:

                    if not lIIlIllllIlIlIIIlI.isdigit():

                        print(f'Retrieving user ID for username: {lIIlIllllIlIlIIIlI}...')

                        lIIlIllllIlIlIIIlI = asyncio.run(IasyncioIIl(lIIlIllllIlIlIIIlI))

                        if lIIlIllllIlIlIIIlI is None:

                            print(Fore.RED + 'Failed to retrieve user ID. Please enter the user ID manually.' + Style.RESET_ALL)

                            lIIlIllllIlIlIIIlI = input('Enter the user ID: ')

                    llIlllIlllIlIllIll = lIlIlIlllllIlIlIII(lIIlIllllIlIlIIIlI) or lIIlIllllIlIlIIIlI

                    (IIIllIIIlIIlllIIll, lIIlllllIllIIIllll) = IIlIIllIllllIIllll(lIIlIllllIlIlIIIlI)

                    if IIIllIIIlIIlllIIll == 2:

                        print(Fore.GREEN + f'{llIlllIlllIlIllIll} ({lIIlIllllIlIlIIIlI}) is currently in-game.' + Style.RESET_ALL)

                    elif not lllIllIlIlllIllIIl(lIllllllIlllIlIlll):

                        print(Fore.RED + f'{lIllllllIlllIlIlll} process has crashed. Relaunching...' + Style.RESET_ALL)

                        IllIlIIIllllIllIlI(lIllllllIlllIlIlll)

                        time.sleep(2)

                        IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

                    elif lIIlllllIllIIIllll == 'Website':

                        print(Fore.RED + f'{llIlllIlllIlIllIll} ({lIIlIllllIlIlIIIlI}) is on the website or has been inactive. Rejoining...' + Style.RESET_ALL)

                        IllIlIIIllllIllIlI(lIllllllIlllIlIlll)

                        time.sleep(2)

                        IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

                    else:

                        print(Fore.YELLOW + f'{llIlllIlllIlIllIll} ({lIIlIllllIlIlIIIlI}) is not in-game but was recently active.' + Style.RESET_ALL)

                    time.sleep(5)

                if lIlIIIIIIllIIlllll - IlIIlIIIlIIllIIIIl >= llIIlIIlIIlllIllIl:

                    print('Performing bypass operation...')

                    for (lIllllllIlllIlIlll, lIIlIllllIlIlIIIlI) in IlllllllllIlIIIIlI:

                        if IlIllIlllllllIIIII == '1':

                            IlIIllllIIIIlllIIl = lllIIIllIllIlIlIIl(lIIlIllllIlIlIIIlI)

                        elif IlIllIlllllllIIIII == '2':

                            IlIIllllIIIIlllIIl = IlllIIIIllIIIllllI(IIIlIlllIIIllllIII(lIllllllIlllIlIlll))

                        if IlIIllllIIIIlllIIl:

                            try:

                                llIIllIIIlIlIIllll = requests.get(IlIIllllIIIIlllIIl)

                                if llIIllIIIlIlIIllll.status_code == 200:

                                    lIIlIIIIlIllIIIlII = llIIllIIIlIlIIllll.json()

                                    print(Fore.GREEN + f'Bypass successful for {lIIlIllllIlIlIIIlI} on package {lIllllllIlllIlIlll}.' + Style.RESET_ALL)

                                    print(Fore.CYAN + f'Result: {lIIlIIIIlIllIIIlII}' + Style.RESET_ALL)

                                else:

                                    print(Fore.RED + f'Bypass failed for {lIIlIllllIlIlIIIlI} on package {lIllllllIlllIlIlll} with status code {llIIllIIIlIlIIllll.status_code}.' + Style.RESET_ALL)

                            except Exception as IIlIlIIlIllIlIlIll:

                                print(Fore.RED + f'Error during bypass for {lIIlIllllIlIlIIIlI} on package {lIllllllIlllIlIlll}: {IIlIlIIlIllIlIlIll}' + Style.RESET_ALL)

                    IlIIlIIIlIIllIIIIl = lIlIIIIIIllIIlllll

                time.sleep(120)

                if lIlIIIIIIllIIlllll - IIllIIllllIIlIllII >= lIllIlIIIllllIIllI:

                    print('Force killing Roblox processes due to time limit.')

                    IlIIlIIlIIIIlIIllI()

                    IIllIIllllIIlIllII = lIlIIIIIIllIIlllll

                    print(Fore.YELLOW + 'Waiting for 5 seconds before starting the rejoin process...' + Style.RESET_ALL)

                    time.sleep(5)

                    for (lIllllllIlllIlIlll, IlllIIIlIIlllIllII) in IIIllIlllllIlIIlll:

                        IlllIlllIIIIllllll(lIllllllIlllIlIlll, IlllIIIlIIlllIllII, IIIllIlIlIlllllllI)

        elif IIllIIlIlllIIlIIII == '9':

            IIIllIlIIIIIIIIllI()

        elif IIllIIlIlllIIlIIII == '10':

            global lllIIIlIlllIllIIII

            lllIIIlIlllIllIIII = True

            break

if __name__ == '__main__':

    lIIllllIIIIlllllIl()
