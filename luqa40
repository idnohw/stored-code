IllIlIlIlIIIIIIlll = '/storage/emulated/0/Download/server_links.txt'

lllllIIlIlIIlIIlll = '/storage/emulated/0/Download/accounts.txt'

IIIIIlIlIIllIlIllI = '/storage/emulated/0/Download/config.json'

lllIllllIlIIIIIIIl = None

IlllIllIIIIllIllll = None

IIIlIllIllIlIIIllI = None

lllIIIIIlIllIIllIl = False

lIlIIIIIlIIllIllIl = None

llIllIlIlIlIIlIIIl = 'https://shiroo.pythonanywhere.com/notify_active_users'

def extract_username(file_path):
    try:
        with open(file_path, "r") as config_file:
            file_content = config_file.read()

            # Cari indeks awal dari "Username":""
            username_start_index = file_content.find('"Username":"')

            if username_start_index == -1:
                print(Fore.RED + "[-] " + Fore.WHITE + "Username not found" + Style.RESET_ALL)
                return None

            # Tambah panjang '"Username":"'
            username_start_index += len('"Username":"')

            # Cari indeks akhir dari username
            username_end_index = file_content.find('"', username_start_index)

            if username_end_index == -1:
                print(Fore.RED + "[-] " + Fore.WHITE + "Username end quote not found" + Style.RESET_ALL)
                return None

            # Ambil username
            username = file_content[username_start_index:username_end_index]

            return username

    except IOError as e:
        print(Fore.RED + "[-] " + Fore.WHITE + f"Error reading file: {e}" + Style.RESET_ALL)
        return None
    
def manage_roblox_packages():
    def find_roblox_packages():
        found_packages = []
        for suffix in ["u", "v", "w", "x", "y", "z", "p", "q", "r", "s"]:
            package_name = f"com.roblox.clien{suffix}"
            if os.system(f"pm list packages | grep -q '{package_name}'") == 0:
                found_packages.append(package_name)
        return found_packages

    def launch_roblox_package(package_name):
        try:
            subprocess.run(
                [
                    "am",
                    "start",
                    "-n",
                    f"{package_name}/com.roblox.client.startup.ActivitySplash",
                ],
                stdout=subprocess.DEVNULL,
                stderr=subprocess.DEVNULL,
            )
            time.sleep(10)
            print(Fore.GREEN + f"[+] Launched Roblox package: {package_name}" + Style.RESET_ALL)
        except Exception as e:
            print(Fore.RED + "[!] " + Fore.WHITE + f"Error launching Roblox for {package_name}: {e}" + Style.RESET_ALL)

    def terminate_roblox_processes():

        roblox_package_names = find_roblox_packages()

        for package_name in roblox_package_names:

            os.system(f"pkill -f {package_name}")

        time.sleep(2)

    # Menemukan paket Roblox yang tersedia
    available_packages = find_roblox_packages()
    
    if available_packages:
        print(Fore.YELLOW + "Found Roblox packages:" + Style.RESET_ALL)
        
        for pkg in available_packages:
            launch_roblox_package(pkg)

        # Tunggu beberapa detik sebelum menutup semua aplikasi
        time.sleep(2)  # Atur waktu tunggu sesuai kebutuhan

        print(Fore.YELLOW + "Closing all Roblox packages..." + Style.RESET_ALL)
        terminate_roblox_processes()

        time.sleep(5)
        # Path asli file cookies dan appStorage
        original_path_cookie = '/storage/emulated/0/download/Cookies'
        original_appstorage = '/storage/emulated/0/download/appStorage.json'

        # Path tujuan untuk file cookies dan appStorage
        databases = {
            pkg: {
                'cookies': f'/data/data/{pkg}/app_webview/Default/Cookies',
                'appStorage': f'/data/data/{pkg}/files/appData/LocalStorage/appStorage.json'
            }
            for pkg in available_packages
        }

        # Menyalin file cookies dan appStorage ke setiap paket yang ditemukan
        for package_name, paths in databases.items():
            # Salin file cookies
            if os.path.exists(original_path_cookie):
                try:
                    shutil.copy2(original_path_cookie, paths['cookies'])
                    print(f"Successfully Found the Cookies{paths['cookies']}.")
                except Exception as e:
                    print(f"Error Exception on : {paths['cookies']}: {e}")
            else:
                print(f"Cannot find the Cookies{original_path_cookie}.")

            # Salin file appStorage
            if os.path.exists(original_appstorage):
                try:
                    shutil.copy2(original_appstorage, paths['appStorage'])
                    print(f"Successfully Found the appStorage.json{paths['appStorage']}.")
                except Exception as e:
                    print(f"Error Exception on : {paths['appStorage']}: {e}")
            else:
                print(f"Cannot find the appStorage.json {original_appstorage}.")

        # Meminta input cookie dari pengguna
        cookies = {}
        for package_name in available_packages:
            cookie = input(f"Input the cookie for : {package_name}: ")
            cookies[package_name] = cookie

        old_value = '_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|_1C4FEB368530A38FA23F1B0926DC6BBFB4B7C3B5DA7C0A362416BE304235AE81841B7073D18ED4607EEF51975DAA33919C3D62922A3958D3B213DA4662903ED4D4A6AF4BF8039D436E9D0BCFAE1448EB245A7F4A01E11688F3A697591B63F60A1F39F9407FD0CEE5EBAB8A3FA93BF9F8D63AA0DE2511B7712F6A96B25AEF20232232309E5CEECA5EED8ACB573AB1643B9AE1FE5E1A2541E1D0535C4FFCD0DA8E06983784552FC3247C39BD237ECA81C9E759EB6F7B852DE66C1A8FE85835C3FEF408F474FBAB739F3D55542671093DE1D235246DAA613225D6DCBEB2A4C3BFC6F35997AB4566C3D523F83B7BBFF03A8FF47255D7830F4E1D4B44AC8F295E0E8236D310C8967F55AE7D0498D798C114C8FD25E416A285CD98C3366935DF097F571AD99797071374DD784AB0740F247D72D4FAA87AA6EC0FE1A5FC2835C6759DD415E9739EC49817483AD6D892E9B5BFD3ACD95DD7A350BB42921E47FFCA7CA3A9F0BEF89DE32FAC2477EC770FFB1E045219EDCB0F008FB0C865245A05D717426DE22C2085E617FE62EEA013B5991487A8369043E7589EEAFB644E790198F3FE49310A9780D4BB34AC3D3300790038A7F26DBD8093D102EF28049A077AE3D016039A4E35085C046006D7FA82395D7EFFD4962E2AFAC029A9318CF2A51792604C0936A4EB9642671BF53CED1A928BA7D7F96F5D360B626D1FC960D5D056A3CC0EAB5C08FFF92E7BA7400169607A97C774FCE6A3DB8288E27CD6399CCCF208E4C595ED5149162A4F9660B25BFDC7E33616102E7CA58A39FCC506FC46830BB02DD853FB01DF94D818E73D0D7C033AED3E9CC2E25EFDE4F60A04312C7CC6DC9B9458E5098C0BB0BFAAAA6A02DABAFCBC5A0390A8BE6196F2D303745AD7EBDC3F6464640BC8FC25C2873646D750F5514B2DAB04D062F70C'

        for package_name, paths in databases.items():
            try:
                conn = sqlite3.connect(paths['cookies'])
                cursor = conn.cursor()

                # Update nilai di tabel cookies
                cursor.execute('UPDATE cookies SET value = ? WHERE value = ?', (cookies[package_name], old_value))

                # Simpan perubahan
                conn.commit()

                print(f"Changed the value for : {package_name}.")

                # Tutup koneksi
                conn.close()
            except Exception as e:
                print(f"Error Exception on : {package_name}: {e}")

    else:
        print(Fore.RED + "[!] No Roblox packages found." + Style.RESET_ALL)


def lIlIlllIIIIlllIIlI():

    os.system('cls' if os.name == 'nt' else 'clear')

    logo = """

     ░▒▓██████▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░ 
    ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
    ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
    ░▒▓████████▓▒░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░  
    ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
    ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
    ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓████████▓▒░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░ 
                                                           
    """

    credit = """
    [+] made by idnohw tamvan | tools ver 0.1 [BETA]
    """

    credit2 = """
    [!] Please tell me the bugs on #bug-report! <3
            
            
    """
    print(Colorate.Horizontal(Colors.blue_to_cyan, Center.XCenter(logo)))
    print(Colorate.Horizontal(Colors.blue_to_cyan, Center.XCenter(credit)))
    print(Colorate.Horizontal(Colors.yellow_to_red, Center.XCenter(credit2)))


def llllIlIIlIIlIIIlll():

    try:

        lIlllIllIllIllIIll = requests.post(llIllIlIlIlIIlIIIl)

        if lIlllIllIllIllIIll.status_code != 200:

            pass

    except Exception:

        pass



def llIIllIIlllIIllIIl():

    IIIlIIIlllIIlIIlll = []

    for IlIllIIllIIIIlllll in ['u', 'v', 'w', 'x', 'y', 'z', 'p', 'q', 'r', 's']:

        llIIlIllllIlllllIl = f'com.roblox.clien{IlIllIIllIIIIlllll}'

        if os.system(f"pm list packages | grep -q '{llIIlIllllIlllllIl}'") == 0:

            IIIlIIIlllIIlIIlll.append(llIIlIllllIlllllIl)

    return IIIlIIIlllIIlIIlll



def IlIlIIIIlIllIIIlIl():

    IIllIIlllIIlllllll = '/data/data/com.termux/files/home/screenshot.png'

    os.system(f'screencap -p {IIllIIlllIIlllllll}')

    return IIllIIlllIIlllllll



def llIIlIIlIIlllIlllI():

    IIIllIIIlIIlllIIlI = psutil.cpu_percent(interval=1)

    IlIIlIIlllIlllIIIl = psutil.virtual_memory()

    lllIllIlIllIIIIIlI = time.time() - psutil.boot_time()

    IIIllllllIIlllllIl = {'cpu_usage': IIIllIIIlIIlllIIlI, 'memory_total': IlIIlIIlllIlllIIIl.total, 'memory_available': IlIIlIIlllIlllIIIl.available, 'memory_used': IlIIlIIlllIlllIIIl.used, 'uptime': lllIllIlIllIIIIIlI}

    return IIIllllllIIlllllIl

sigmajir = {"sets3sigma#1","freetrial2day"}  # Menggunakan list

def lIIIlIIIlIIlIIIIIl():

    global lllIllllIlIIIIIIIl, IlllIllIIIIllIllll, IIIlIllIllIlIIIllI

    if os.path.exists(IIIIIlIlIIllIlIllI):

        with open(IIIIIlIlIIllIlIllI, 'r') as lllIIIIIlIIllllIII:

            IlIlIlIllIIIlIlIII = json.load(lllIIIIIlIIllllIII)

            lllIllllIlIIIIIIIl = IlIlIlIllIIIlIlIII.get('webhook_url')

            IlllIllIIIIllIllll = IlIlIlIllIIIlIlIII.get('device_name')

            IIIlIllIllIlIIIllI = IlIlIlIllIIIlIlIII.get('interval')

    else:

        lllIllllIlIIIIIIIl = None

        IlllIllIIIIllIllll = None

        IIIlIllIllIlIIIllI = None



def lIlIIlIIlIIIIIlIll():

    IlIlIlIllIIIlIlIII = {'webhook_url': lllIllllIlIIIIIIIl, 'device_name': IlllIllIIIIllIllll, 'interval': IIIlIllIllIlIIIllI}

    with open(IIIIIlIlIIllIlIllI, 'w') as lllIIIIIlIIllllIII:

        json.dump(IlIlIlIllIIIlIlIII, lllIIIIIlIIllllIII)



def IllllIIlIIIIIIIIIl():

    global lIlIIIIIlIIllIllIl, lllIIIIIlIllIIllIl

    if lIlIIIIIlIIllIllIl is None or not lIlIIIIIlIIllIllIl.is_alive():

        lllIIIIIlIllIIllIl = False

        lIlIIIIIlIIllIllIl = threading.Thread(target=IIIIIIlIIllIlIIlll)

        lIlIIIIIlIIllIllIl.start()



def IIIlIlllIllIIIlIll():

    lIlllIIlIIlIlIllII = 0

    for llIlllIllIlIlIlIlI in psutil.process_iter(['name']):

        if 'roblox' in llIlllIllIlIlIlIlI.info['name'].lower():

            lIlllIIlIIlIlIllII += 1

    return lIlllIIlIIlIlIllII



def IIIIIIlIIllIlIIlll():

    global lllIIIIIlIllIIllIl

    while not lllIIIIIlIllIIllIl:

        IIllIIlllIIlllllll = IlIlIIIIlIllIIIlIl()

        IIIllllllIIlllllIl = llIIlIIlIIlllIlllI()

        IlIlIIIlllIIIlllIl = IIIlIlllIllIIIlIll()

        def get_roblox_packages(num):
            base_package = "com.roblox.clien"
            suffixes = "uvwxyzpqr"
            packages = [base_package + suffix for suffix in suffixes[:num]]
            return "\n".join(packages)

        IlIlIIIlllIIIlllIl = get_roblox_packages(IlIlIIIlllIIIlllIl)

        IIIlIlIlIlIIIIIlIl = {'title': f'DEVICE NAME | {IlllIllIIIIllIllll.upper()}', 'color': 1127128, 'fields': [{'name': 'Device Name', 'value': IlllIllIIIIllIllll, 'inline': True}, {'name': 'CPU Usage', 'value': f"{IIIllllllIIlllllIl['cpu_usage']}%", 'inline': True},{'name': 'Uptime', 'value': f"{IIIllllllIIlllllIl['uptime'] / 3600:.2f} hours", 'inline': True}, {'name': 'Open Roblox Packages', 'value': f'{IlIlIIIlllIIIlllIl}', 'inline': True}], 'image': {'url': 'attachment://screenshot.png'}}

        IIIllIlIlllIIlIlIl = {'embeds': [IIIlIlIlIlIIIIIlIl], 'username': 'AILOX REJOINER'}

        with open(IIllIIlllIIlllllll, 'rb') as lllIIIIIlIIllllIII:

            lIlllIllIllIllIIll = requests.post(lllIllllIlIIIIIIIl, data={'payload_json': json.dumps(IIIllIlIlllIIlIlIl)}, files={'file': ('screenshot.png', lllIIIIIlIIllllIII)})

        if lIlllIllIllIllIIll.status_code == 204 or lIlllIllIllIllIIll.status_code == 200:

            print(Fore.GREEN + '' + Style.RESET_ALL)

        else:

            print(Fore.GREEN + '' + Style.RESET_ALL)

        try:

            os.remove(IIllIIlllIIlllllll)

        except Exception as IIIlIIllIlIlIlIllI:

            print(Fore.RED + f'' + Style.RESET_ALL)

        time.sleep(IIIlIllIllIlIIIllI * 60)



def IllIlIllIllIIIlIII():

    global lllIIIIIlIllIIllIl

    lllIIIIIlIllIIllIl = True



def lllIIlIIlIIlIIllll():

    global lllIllllIlIIIIIIIl, IlllIllIIIIllIllll, IIIlIllIllIlIIIllI, lllIIIIIlIllIIllIl

    lllIIIIIlIllIIllIl = True

    lllIllllIlIIIIIIIl = input(Fore.GREEN + 'Enter the Discord webhook URL: ' + Style.RESET_ALL)

    IlllIllIIIIllIllll = input(Fore.GREEN + 'Enter the device name: ' + Style.RESET_ALL)

    IIIlIllIllIlIIIllI = int(input(Fore.GREEN + 'Enter the interval in minutes for sending the webhook: ' + Style.RESET_ALL))

    lIlIIlIIlIIIIIlIll()

    lllIIIIIlIllIIllIl = False




def IIIIIlIIIIllIIIlll(llIIlIllllIlllllIl):

    for llIlllIllIlIlIlIlI in psutil.process_iter(['name']):

        if llIIlIllllIlllllIl in llIlllIllIlIlIlIlI.info['name'].lower():

            return True

    return False



def IlllllIIIlIIIIIIII():

    lllllIIIIIIlllIlIl = llIIllIIlllIIllIIl()

    for llIIlIllllIlllllIl in lllllIIIIIIlllIlIl:

        os.system(f'pkill -f {llIIlIllllIlllllIl}')

    time.sleep(2)



def lllllllIlIlIllIIll(llIIlIllllIlllllIl):

    os.system(f'pkill -f {llIIlIllllIlllllIl}')

    time.sleep(2)



def llllIIlIIIIIIlIIII(llIIlIllllIlllllIl, lIIIIlllIIIlIllIll, IlllllIlIllIIIIIlI):

    try:

        subprocess.run(['am', 'start', '-n', f'{llIIlIllllIlllllIl}/com.roblox.client.startup.ActivitySplash', '-d', lIIIIlllIIIlIllIll], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

        time.sleep(15 if IlllllIlIllIIIIIlI >= 6 else 8)

        subprocess.run(['am', 'start', '-n', f'{llIIlIllllIlllllIl}/com.roblox.client.ActivityProtocolLaunch', '-d', lIIIIlllIIIlIllIll], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

        time.sleep(20)

    except Exception as IIIlIIllIlIlIlIllI:

        print(f'Error launching Roblox for {llIIlIllllIlllllIl}: {IIIlIIllIlIlIlIllI}')



def lllIIllIIlIIIllIIl(llIlIIlIlIllllIlIl):

    if 'roblox.com' in llIlIIlIlIllllIlIl:

        return llIlIIlIlIllllIlIl

    elif llIlIIlIlIllllIlIl.isdigit():

        return f'roblox://placeID={llIlIIlIlIllllIlIl}'

    else:

        print(Fore.RED + 'Invalid input! Please enter a valid game ID or private server link.' + Style.RESET_ALL)

        return None



def llllIllIlIIllIlIII(llIlIlllIlllllIIII):

    with open(IllIlIlIlIIIIIIlll, 'w') as lllIIIIIlIIllllIII:

        for (IlIIlIlIlllIllIlII, IlIIllllIIlIllllII) in llIlIlllIlllllIIII:

            lllIIIIIlIIllllIII.write(f'{IlIIlIlIlllIllIlII},{IlIIllllIIlIllllII}\n')



def IIIlllIllIlllllIII():

    llIlIlllIlllllIIII = []

    if os.path.exists(IllIlIlIlIIIIIIlll):

        with open(IllIlIlIlIIIIIIlll, 'r') as lllIIIIIlIIllllIII:

            for llIIllllIllIlIlIll in lllIIIIIlIIllllIII:

                (IlIIlIlIlllIllIlII, IlIIllllIIlIllllII) = llIIllllIllIlIlIll.strip().split(',', 1)

                llIlIlllIlllllIIII.append((IlIIlIlIlllIllIlII, IlIIllllIIlIllllII))

    return llIlIlllIlllllIIII



def IlIlIIllIIlllIllIl(lIIllIIlllllIllIII):

    with open(lllllIIlIlIIlIIlll, 'w') as lllIIIIIlIIllllIII:

        for (IlIIlIlIlllIllIlII, llllIlIIIIllIlllII) in lIIllIIlllllIllIII:

            lllIIIIIlIIllllIII.write(f'{IlIIlIlIlllIllIlII},{llllIlIIIIllIlllII}\n')



def IlIIlIlIIlIIlIIIll():

    lIIllIIlllllIllIII = []

    if os.path.exists(lllllIIlIlIIlIIlll):

        with open(lllllIIlIlIIlIIlll, 'r') as lllIIIIIlIIllllIII:

            for llIIllllIllIlIlIll in lllIIIIIlIIllllIII:

                (IlIIlIlIlllIllIlII, llllIlIIIIllIlllII) = llIIllllIllIlIlIll.strip().split(',', 1)

                lIIllIIlllllIllIII.append((IlIIlIlIlllIllIlII, llllIlIIIIllIlllII))

    return lIIllIIlllllIllIII



def llllllllIlIIIIllll(IlIIIlllIIIIlIIIIl):

    try:

        with open(IlIIIlllIIIIlIIIIl, 'r') as lllIIIIIlIIllllIII:

            IllIlIIlIlIlIlIIlI = lllIIIIIlIIllllIII.read()

            IlIlllllIlIIIIlIll = IllIlIIlIlIlIlIIlI.find('"UserId":"')

            if IlIlllllIlIIIIlIll == -1:

                print('UserID not found!')

                return None

            IlIlllllIlIIIIlIll += len('"UserId":"')

            lIIlIIlIIlIlIIllII = IllIlIIlIlIlIlIIlI.find('"', IlIlllllIlIIIIlIll)

            if lIIlIIlIIlIlIIllII == -1:

                print('UserID not detected!')

                return None

            IIIlIIllllIIIIIIlI = IllIlIIlIlIlIlIIlI[IlIlllllIlIIIIlIll:lIIlIIlIIlIlIIllII]

            return IIIlIIllllIIIIIIlI

    except IOError as IIIlIIllIlIlIlIllI:

        print(f'Error reading file: {IIIlIIllIlIlIlIllI}')

        return None



async def lIlIIIlIIlllIlIIll(llllIIlIIIIlIIIIlI):

    lIllIlIllIIllIllll = 'https://users.roblox.com/v1/usernames/users'

    IIIllIlIlllIIlIlIl = {'usernames': [llllIIlIIIIlIIIIlI], 'excludeBannedUsers': True}

    lIIIllIIlllIllllII = {'Content-Type': 'application/json'}

    async with aiohttp.ClientSession() as IllllIllIIllIlIIIl:

        async with IllllIllIIllIlIIIl.post(lIllIlIllIIllIllll, json=IIIllIlIlllIIlIlIl, headers=lIIIllIIlllIllllII) as lIlllIllIllIllIIll:

            IIlllllIlIlIllIIIl = await lIlllIllIllIllIIll.json()

            if 'data' in IIlllllIlIlIllIIIl and len(IIlllllIlIlIllIIIl['data']) > 0:

                return IIlllllIlIlIllIIIl['data'][0]['id']

    return None



def IIllIllIlIlllIlllI(llllIlIIIIllIlllII):

    try:

        lIllIlIllIIllIllll = f'https://users.roblox.com/v1/users/{llllIlIIIIllIlllII}'

        lIlllIllIllIllIIll = requests.get(lIllIlIllIIllIllll)

        lIlllIllIllIllIIll.raise_for_status()

        IIlllllIlIlIllIIIl = lIlllIllIllIllIIll.json()

        return IIlllllIlIlIllIIIl.get('name', 'Unknown')

    except Exception as IIIlIIllIlIlIlIllI:

        print(f'Error getting username for user ID {llllIlIIIIllIlllII}: {IIIlIIllIlIlIlIllI}')

        return None



def IIIlllIllIIIllIlII(llllIlIIIIllIlllII):

    try:
        current_date = datetime.today()
        
        IIIllIIIIllIllIIll = 'https://presence.roblox.com/v1/presence/users'

        lIIIllIIlllIllllII = {'Content-Type': 'application/json'}

        lIIllIlllllIIlllll = json.dumps({'userIds': [llllIlIIIIllIlllII]})

        with requests.Session() as IllllIllIIllIlIIIl:

            lIIllllllIIlllIlII = IllllIllIIllIlIIIl.post(IIIllIIIIllIllIIll, headers=lIIIllIIlllIllllII, data=lIIllIlllllIIlllll, timeout=7)

        lIIllllllIIlllIlII.raise_for_status()

        IIIlIIIIIlIIIllIII = lIIllllllIIlllIlII.json()

        IlIIIIIlIllIIlIIll = IIIlIIIIIlIIIllIII['userPresences'][0]['userPresenceType']

        IllllIlllllIllIIlI = IIIlIIIIIlIIIllIII['userPresences'][0].get('lastLocation', None)

        if IllllIlllllIllIIlI == 'Website':

            print(Fore.CYAN + str(current_date) + f'{llllIlIIIIllIlllII} is respond with 101 online not ingame' + Style.RESET_ALL)

            IlIIIIIlIllIIlIIll = 0

        return (IlIIIIIlIllIIlIIll, IllllIlllllIllIIlI)

    except Exception as IIIlIIllIlIlIlIllI:

        print(Fore.RED + f'Error checking online status for user {llllIlIIIIllIlllII}: {IIIlIIllIlIlIlIllI}' + Style.RESET_ALL)

        return (None, None)



def IllllIlIIllllllIIl(llIIlIllllIlllllIl):

    IIIIlIlIIlIlllllIl = f'/data/data/{llIIlIllllIlllllIl}/app_assets/content/'

    try:

        lIlllllllIIllIllII = [IlIIlIllllIllIIllI for IlIIlIllllIllIIllI in os.listdir(IIIIlIlIIlIlllllIl) if os.path.isfile(os.path.join(IIIIlIlIIlIlllllIl, IlIIlIllllIllIIllI))]

        if not lIlllllllIIllIllII:

            print(Fore.RED + 'Login & Validate user IDs First!' + Style.RESET_ALL)

            return None

        llIIIIllIlIlllIIII = lIlllllllIIllIllII[-1]

        lIlIlIlIIIlIlIlIII = os.path.join(IIIIlIlIIlIlllllIl, llIIIIllIlIlllIIII)

        with open(lIlIlIlIIIlIlIlIII, 'r') as lllIIIIIlIIllllIII:

            IIlIIIIIIlIIIlIIII = lllIIIIIlIIllllIII.read().strip()

            print(Fore.GREEN + f'Target HWID : {IIlIIIIIIlIIIlIIII}' + Style.RESET_ALL)

            return IIlIIIIIIlIIIlIIII

    except Exception as IIIlIIllIlIlIlIllI:

        print(Fore.RED + f'Failed GET: {IIIlIIllIlIlIlIllI}' + Style.RESET_ALL)

        return None



def lllllIIllIIIIIllIl(IIlIIIIIIlIIIlIIII, IlIIIlIIIlIIllllII='shirooapikeyreal'):

    return f'https://shouko-api.neyoshiiuem.workers.dev/bypass?link=https://flux.li/android/external/start.php?HWID={IIlIIIIIIlIIIlIIII}&api_key={IlIIIlIIIlIIllllII}'



def lIIIIIllIIllllIllI(llllIlIIIIllIlllII, IlIIIlIIIlIIllllII='shirooapikeyreal'):

    return f'http://45.90.13.151:6122/api/bypass?link=https://gateway.platoboost.com/a/8?id={llllIlIIIIllIlllII}&api_key={IlIIIlIIIlIIllllII}'



def IIIlllIIIllIIIIIll(llllIIlIIIIlIIIIlI, IlIIIlIIIlIIllllII='XqzyaenZishd33axPYPz'):

    return f'https://madkung.vercel.app/delta-username-api?user_name={llllIIlIIIIlIIIIlI}&api_key={IlIIIlIIIlIIllllII}'



def IllIIllllIIlIlIIII(lIIllIIlllllIllIII):

    lIIIlllIlIIlllIlll = []

    for (llIIlIllllIlllllIl, lIIIllIIIlIlllllIl) in lIIllIIlllllIllIII:

        if lIIIllIIIlIlllllIl.isdigit():

            llllllIIlIlIllllII = lIIIIIllIIllllIllI(lIIIllIIIlIlllllIl)

            llllIIlIIIIlIIIIlI = IIllIllIlIlllIlllI(lIIIllIIIlIlllllIl)

        else:

            llllllIIlIlIllllII = None

            llllIIlIIIIlIIIIlI = lIIIllIIIlIlllllIl

        if llllllIIlIlIllllII:

            try:

                lIlllIllIllIllIIll = requests.get(llllllIIlIlIllllII)

                if lIlllIllIllIllIIll.status_code == 200:

                    lIIIlllIlIIlllIlll.append((llIIlIllllIlllllIl, lIlllIllIllIllIIll.json()))

                    print(Fore.GREEN + f'{llllIIlIIIIlIIIIlI}: Successfully bypassed, enjoy!' + Style.RESET_ALL)

                    continue

                else:

                    print(Fore.RED + f'{llllIIlIIIIlIIIIlI}: Failed bypassing please try again later.' + Style.RESET_ALL)

            except Exception as IIIlIIllIlIlIlIllI:

                print(Fore.RED + f'{llllIIlIIIIlIIIIlI}: Unexpected error please try again.' + Style.RESET_ALL)

        if not lIIIllIIIlIlllllIl.isdigit() or lIlllIllIllIllIIll.status_code != 200:

            IIlIllIIIllllllIIl = IIIlllIIIllIIIIIll(lIIIllIIIlIlllllIl)

            try:

                lIlllIllIllIllIIll = requests.get(IIlIllIIIllllllIIl)

                if lIlllIllIllIllIIll.status_code == 200:

                    lIIIlllIlIIlllIlll.append((llIIlIllllIlllllIl, lIlllIllIllIllIIll.json()))

                    print(Fore.GREEN + f'{llllIIlIIIIlIIIIlI}: Successfully bypassed, enjoy!' + Style.RESET_ALL)

                else:

                    print(Fore.RED + f'{llllIIlIIIIlIIIIlI}: Failed bypassing please try again later.' + Style.RESET_ALL)

            except Exception as IIIlIIllIlIlIlIllI:

                print(Fore.RED + f'{llllIIlIIIIlIIIIlI}: Unexpected error please try again.' + Style.RESET_ALL)

    return lIIIlllIlIIlllIlll



def IlllllllIlIlllllII():

    lIlIlllIIIIlllIIlI()

    Write.Input("Enter to countinue ->", Colors.blue_to_cyan, interval=0.07)

    lIIIlIIIlIIlIIIIIl()

    while True:
        lIlIlllIIIIlllIIlI()

        IIIIlIlIllIllIIlIl = input(Fore.CYAN + '\nCommand List ->\n\n' + Fore.WHITE + '1. Launch Auto Rejoin\n2. Different Private Server or Game ID\n3. Validate User IDs and Server\n4. Auto Bypass Menu \n5. Set Up Webhook\n6. Auto Login (Cookie)\n7. Exit\n\n' + Fore.CYAN + 'Enter command -> ' + Style.RESET_ALL)

        if IIIIlIlIllIllIIlIl == '1':

            llIlIlllIlllllIIII = IIIlllIllIlllllIII()

            lIIllIIlllllIllIII = IlIIlIlIIlIIlIIIll()

            if not lIIllIIlllllIllIII:

                print(Fore.RED + 'Choose no.3 first before launching auto rejoin!' + Style.RESET_ALL)

                continue

            elif not llIlIlllIlllllIIII:

                print(Fore.RED + 'Please setup your private link or game ID' + Style.RESET_ALL)

                continue

            if lllIllllIlIIIIIIIl and IlllIllIIIIllIllll and IIIlIllIllIlIIIllI:

                if lIlIIIIIlIIllIllIl is None or not lIlIIIIIlIIllIllIl.is_alive():

                    IllllIIlIIIIIIIIIl()

            IlllllIIIlIIIIIIII()
            
            Write.Print("[+] Importing Libraries..\n", Colors.blue_to_cyan, interval=0.05)

            time.sleep(5)

            Write.Print("[+] Libraries has been Loaded Starting..\n\n", Colors.blue_to_cyan, interval=0.05)

            time.sleep(5)

            IlllllIlIllIIIIIlI = len(llIlIlllIlllllIIII)

            for (llIIlIllllIlllllIl, lIIIIlllIIIlIllIll) in llIlIlllIlllllIIII:

                llllIIlIIIIIIlIIII(llIIlIllllIlllllIl, lIIIIlllIIIlIllIll, IlllllIlIllIIIIIlI)

            IlIllIIlIIllIlIlIl = time.time()

            while True:

                lllIIIIlIIIIlIIIll = time.time()

                for (llIIlIllllIlllllIl, llllIlIIIIllIlllII) in lIIllIIlllllIllIII:

                    if not llllIlIIIIllIlllII.isdigit():

                        print(f'Failed getting the userID: {llllIlIIIIllIlllII}...')

                        llllIlIIIIllIlllII = asyncio.run(lIlIIIlIIlllIlIIll(llllIlIIIIllIlllII))

                        if llllIlIIIIllIlllII is None:

                            print(Fore.RED + 'Error checking userID please input manually..' + Style.RESET_ALL)

                            llllIlIIIIllIlllII = input('Enter userID: ')

                    current_date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

                    file_path = f"/data/data/{llIIlIllllIlllllIl}/files/appData/LocalStorage/appStorage.json"
                    
                    llllIIlIIIIlIIIIlI = extract_username(file_path)
                    
                    (IIIIIIlIIIllllIIIl, IlIlllllIIlIlIlllI) = IIIlllIllIIIllIlII(llllIlIIIIllIlllII)

                    if IIIIIIlIIIllllIIIl == 2:

                        print(Fore.GREEN + str(current_date) + f' {llllIIlIIIIlIIIIlI} Is respond with 202 playing experience' + Style.RESET_ALL)

                    elif not IIIIIlIIIIllIIIlll(llIIlIllllIlllllIl):

                        print(Fore.RED + str(current_date) + f' {llllIIlIIIIlIIIIlI} Package crashed relaunching' + Style.RESET_ALL)

                        lllllllIlIlIllIIll(llIIlIllllIlllllIl)

                        time.sleep(2)

                        llllIIlIIIIIIlIIII(llIIlIllllIlllllIl, lIIIIlllIIIlIllIll, IlllllIlIllIIIIIlI)

                    elif IlIlllllIIlIlIlllI == 'Website':

                        print(Fore.CYAN + str(current_date) +  f'{llllIIlIIIIlIIIIlI} Is respond with 100 online not playing' + Style.RESET_ALL)

                        lllllllIlIlIllIIll(llIIlIllllIlllllIl)

                        time.sleep(2)

                        llllIIlIIIIIIlIIII(llIIlIllllIlllllIl, lIIIIlllIIIlIllIll, IlllllIlIllIIIIIlI)

                    else:

                        print(Fore.YELLOW + str(current_date) +  f'{llllIIlIIIIlIIIIlI} Is respond with 101 online not playing' + Style.RESET_ALL)

                    time.sleep(5)

                time.sleep(120)

            '''
            elif IIIIlIlIllIllIIlIl == '2':

                lIIllIIlllllIllIII = []

                IIIlIIIlllIIlIIlll = llIIllIIlllIIllIIl()

                for llIIlIllllIlllllIl in IIIlIIIlllIIlIIlll:

                    llIlIIIIllIIlIIIIl = input(f'Enter the user ID or username for {llIIlIllllIlllllIl}: ')

                    llllIlIIIIllIlllII = None

                    if llIlIIIIllIIlIIIIl.isdigit():

                        llllIlIIIIllIlllII = llIlIIIIllIIlIIIIl

                    else:

                        print(f'Retrieving user ID for username: {llIlIIIIllIIlIIIIl}...')

                        llllIlIIIIllIlllII = asyncio.run(lIlIIIlIIlllIlIIll(llIlIIIIllIIlIIIIl))

                        if llllIlIIIIllIlllII is None:

                            print(Fore.RED + 'Failed to retrieve user ID. Please enter the user ID manually.' + Style.RESET_ALL)

                            llllIlIIIIllIlllII = input('Enter the user ID: ')

                    lIIllIIlllllIllIII.append((llIIlIllllIlllllIl, llllIlIIIIllIlllII))

                    print(f'Set {llIIlIllllIlllllIl} to user ID: {llllIlIIIIllIlllII}')

                IlIlIIllIIlllIllIl(lIIllIIlllllIllIII)

                print(Fore.GREEN + 'User IDs saved!' + Style.RESET_ALL)

            elif IIIIlIlIllIllIIlIl == '3':

                lIIIIlllIIIlIllIll = input('Enter the game ID or private server link: ')

                llIllIIIIllIlIIIII = lllIIllIIlIIIllIIl(lIIIIlllIIIlIllIll)

                if llIllIIIIllIlIIIII:

                    IIIlIIIlllIIlIIlll = llIIllIIlllIIllIIl()

                    llIlIlllIlllllIIII = [(llIIlIllllIlllllIl, llIllIIIIllIlIIIII) for llIIlIllllIlllllIl in IIIlIIIlllIIlIIlll]

                    llllIllIlIIllIlIII(llIlIlllIlllllIIII)

                    print(Fore.GREEN + 'Game ID or private server link saved successfully!' + Style.RESET_ALL)
                '''
        elif IIIIlIlIllIllIIlIl == '2':

            IIIlIIIlllIIlIIlll = llIIllIIlllIIllIIl()

            llIlIlllIlllllIIII = []

            for llIIlIllllIlllllIl in IIIlIIIlllIIlIIlll:

                lIIIIlllIIIlIllIll = input(Fore.CYAN + "\n[!] " + Fore.WHITE +'Enter the game ID or private link for ' + Fore.YELLOW + f' {llIIlIllllIlllllIl} : ' + Style.RESET_ALL)

                llIllIIIIllIlIIIII = lllIIllIIlIIIllIIl(lIIIIlllIIIlIllIll)

                if llIllIIIIllIlIIIII:

                    llIlIlllIlllllIIII.append((llIIlIllllIlllllIl, llIllIIIIllIlIIIII))

            llllIllIlIIllIlIII(llIlIlllIlllllIIII)
            '''
            elif IIIIlIlIllIllIIlIl == '5':

                IIllIlIIllIlIllllI = input(Fore.GREEN + 'What do you want to clear?\n1. Clear User IDs\n2. Clear Server Links\n3. Clear Both\nEnter choice: ' + Style.RESET_ALL)

                if IIllIlIIllIlIllllI == '1':

                    if os.path.exists(lllllIIlIlIIlIIlll):

                        os.remove(lllllIIlIlIIlIIlll)

                        print(Fore.GREEN + 'User IDs cleared successfully!' + Style.RESET_ALL)

                    else:

                        print(Fore.YELLOW + f"No such file: '{lllllIIlIlIIlIIlll}' found to clear." + Style.RESET_ALL)

                elif IIllIlIIllIlIllllI == '2':

                    if os.path.exists(IllIlIlIlIIIIIIlll):

                        os.remove(IllIlIlIlIIIIIIlll)

                        print(Fore.GREEN + 'Server links cleared successfully!' + Style.RESET_ALL)

                    else:

                        print(Fore.YELLOW + f"No such file: '{IllIlIlIlIIIIIIlll}' found to clear." + Style.RESET_ALL)

                elif IIllIlIIllIlIllllI == '3':

                    if os.path.exists(lllllIIlIlIIlIIlll):

                        os.remove(lllllIIlIlIIlIIlll)

                        print(Fore.GREEN + 'User IDs cleared successfully!' + Style.RESET_ALL)

                    else:

                        print(Fore.YELLOW + f"No such file: '{lllllIIlIlIIlIIlll}' found to clear." + Style.RESET_ALL)

                    if os.path.exists(IllIlIlIlIIIIIIlll):

                        os.remove(IllIlIlIlIIIIIIlll)

                        print(Fore.GREEN + 'Server links cleared successfully!' + Style.RESET_ALL)

                    else:

                        print(Fore.YELLOW + f"No such file: '{IllIlIlIlIIIIIIlll}' found to clear." + Style.RESET_ALL)

            elif IIIIlIlIllIllIIlIl == '6':

                lIIllIIlllllIllIII = IlIIlIlIIlIIlIIIll()

                llIlIlllIlllllIIII = IIIlllIllIlllllIII()

                print(Fore.CYAN + 'Usernames, User IDs, Package Names, and Server Links:' + Style.RESET_ALL)

                for ((llIIlIllllIlllllIl, llllIlIIIIllIlllII), (lllllIIIllIlllIllI, lIIIIlllIIIlIllIll)) in zip(lIIllIIlllllIllIII, llIlIlllIlllllIIII):

                    llllIIlIIIIlIIIIlI = IIllIllIlIlllIlllI(llllIlIIIIllIlllII) or llllIlIIIIllIlllII

                    print(f'Package Name: {llIIlIllllIlllllIl}, Username: {llllIIlIIIIlIIIIlI}, User ID: {llllIlIIIIllIlllII}, Server Link: {lIIIIlllIIIlIllIll}')
            '''
        elif IIIIlIlIllIllIIlIl == '3':

            IIIlIIIlllIIlIIlll = llIIllIIlllIIllIIl()

            lIIllIIlllllIllIII = []

            for llIIlIllllIlllllIl in IIIlIIIlllIIlIIlll:

                IlIIIlllIIIIlIIIIl = f'/data/data/{llIIlIllllIlllllIl}/files/appData/LocalStorage/appStorage.json'

                llllIlIIIIllIlllII = llllllllIlIIIIllll(IlIIIlllIIIIlIIIIl)

                if llllIlIIIIllIlllII:

                    lIIllIIlllllIllIII.append((llIIlIllllIlllllIl, llllIlIIIIllIlllII))

                    print(f'Added to databases {llIIlIllllIlllllIl} | {llllIlIIIIllIlllII}')

                else:

                    print(Fore.RED + f'Cannot validate user ids {llIIlIllllIlllllIl}. Make sure put the userids correctly.' + Style.RESET_ALL)

            IlIlIIllIIlllIllIl(lIIllIIlllllIllIII)

            print(Fore.GREEN + 'Validate user successfully\n-' + Style.RESET_ALL)

            lIIIIlllIIIlIllIll = input('Enter the private server link or gameid for whole package :')

            llIllIIIIllIlIIIII = lllIIllIIlIIIllIIl(lIIIIlllIIIlIllIll)

            if llIllIIIIllIlIIIII:

                llIlIlllIlllllIIII = [(llIIlIllllIlllllIl, llIllIIIIllIlIIIII) for llIIlIllllIlllllIl in IIIlIIIlllIIlIIlll]

                llllIllIlIIllIlIII(llIlIlllIlllllIIII)

                print(Fore.GREEN + 'GameID or private server link added to databases.' + Style.RESET_ALL)

        elif IIIIlIlIllIllIIlIl == '4':

            lIIllIIlllllIllIII = IlIIlIlIIlIIlIIIll()

            llIlIlllIlllllIIII = IIIlllIllIlllllIII()

            if not lIIllIIlllllIllIII:

                print(Fore.RED + 'Try login and validate userID first!' + Style.RESET_ALL)

                continue

            print(Fore.GREEN + 'Choose the executor:' + Style.RESET_ALL)

            print('1. Delta')

            print('2. Fluxus')

            IlIIlIlIIllIIIIllI = input('Enter your choice : ')

            if IlIIlIlIIllIIIIllI not in ['1', '2']:

                print(Fore.RED + 'Invalid choice please choose properly!' + Style.RESET_ALL)

                time.sleep(1)

                continue

            print(Fore.GREEN + 'Bypass Interval : ' + Style.RESET_ALL)

            print('1. 30 minutes')

            print('2. 1 hour')

            print('3. 2 hours')

            print('4. 12 hours')

            IlllIIIlIllIllIlIl = input('Enter your choice : ')

            IIllIIlIIIlIIIIIIl = {'1': 30 * 60, '2': 60 * 60, '3': 2 * 60 * 60, '4': 12 * 60 * 60}

            IlIlllIllIlllIIIII = IIllIIlIIIlIIIIIIl.get(IlllIIIlIllIllIlIl)

            if not IlIlllIllIlllIIIII:

                print(Fore.RED + 'Invalid choice please choose properly!' + Style.RESET_ALL)

                continue

            if IlIIlIlIIllIIIIllI == '1':

                IIIllIIIIIlIIllIII = IllIIllllIIlIlIIII(lIIllIIlllllIllIII)

                if not IIIllIIIIIlIIllIII:

                    print(Fore.RED + 'Unexpected error please try again.' + Style.RESET_ALL)

                    continue

            elif IlIIlIlIIllIIIIllI == '2':

                for (llIIlIllllIlllllIl, llllIlIIIIllIlllII) in lIIllIIlllllIllIII:

                    IIlIIIIIIlIIIlIIII = IllllIlIIllllllIIl(llIIlIllllIlllllIl)

                    if IIlIIIIIIlIIIlIIII:

                        llllllIIlIlIllllII = lllllIIllIIIIIllIl(IIlIIIIIIlIIIlIIII)

                        try:

                            lIlllIllIllIllIIll = requests.get(llllllIIlIlIllllII)

                            if lIlllIllIllIllIIll.status_code == 200:

                                IIIlIllIIIIlIlllll = lIlllIllIllIllIIll.json()

                                print(Fore.GREEN + f'{llllIlIIIIllIlllII}: Successfully bypassed, enjoy!' + Style.RESET_ALL)


                            else:

                                print(Fore.RED + f'{llllIlIIIIllIlllII}: Failed bypassing please try again later.' + Style.RESET_ALL)

                        except Exception as IIIlIIllIlIlIlIllI:

                            print(Fore.RED + f'Unexpected error please try again.' + Style.RESET_ALL)

                    else:

                        print(Fore.RED + f'Failed bypassing please try again later..' + Style.RESET_ALL)

            if lllIllllIlIIIIIIIl and IlllIllIIIIllIllll and IIIlIllIllIlIIIllI:

                if lIlIIIIIlIIllIllIl is None or not lIlIIIIIlIIllIllIl.is_alive():

                    IllllIIlIIIIIIIIIl()

            IlllllIIIlIIIIIIII()

            Write.Print("[+] Importing Libraries..\n", Colors.blue_to_cyan, interval=0.05)

            time.sleep(3)

            Write.Print("[+] Libraries has been Loaded Starting..\n\n", Colors.blue_to_cyan, interval=0.05)

            time.sleep(5)

            IlllllIlIllIIIIIlI = len(llIlIlllIlllllIIII)

            for (llIIlIllllIlllllIl, lIIIIlllIIIlIllIll) in llIlIlllIlllllIIII:

                llllIIlIIIIIIlIIII(llIIlIllllIlllllIl, lIIIIlllIIIlIllIll, IlllllIlIllIIIIIlI)

            IlIllIIlIIllIlIlIl = time.time()

            IlIIIllIlllllIIlII = IlIllIIlIIllIlIlIl

            while True:

                lllIIIIlIIIIlIIIll = time.time()

                for (llIIlIllllIlllllIl, llllIlIIIIllIlllII) in lIIllIIlllllIllIII:

                    if not llllIlIIIIllIlllII.isdigit():

                        llllIlIIIIllIlllII = asyncio.run(lIlIIIlIIlllIlIIll(llllIlIIIIllIlllII))

                        if llllIlIIIIllIlllII is None:

                            print(Fore.RED + 'Error checking userID please input manually..' + Style.RESET_ALL)

                            llllIlIIIIllIlllII = input('Enter userID: ')

                    current_date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

                    file_path = f"/data/data/{llIIlIllllIlllllIl}/files/appData/LocalStorage/appStorage.json"

                    llllIIlIIIIlIIIIlI = extract_username(file_path)

                    (IIIIIIlIIIllllIIIl, IlIlllllIIlIlIlllI) = IIIlllIllIIIllIlII(llllIlIIIIllIlllII)

                    if IIIIIIlIIIllllIIIl == 2:

                        print(Fore.GREEN + str(current_date) + f' {llllIIlIIIIlIIIIlI} Is response with 202 playing experience' + Style.RESET_ALL)

                    elif not IIIIIlIIIIllIIIlll(llIIlIllllIlllllIl):

                        print(Fore.RED + str(current_date) + f' {llllIIlIIIIlIIIIlI} Package crashed relaunching' + Style.RESET_ALL)

                        lllllllIlIlIllIIll(llIIlIllllIlllllIl)

                        time.sleep(2)

                        llllIIlIIIIIIlIIII(llIIlIllllIlllllIl, lIIIIlllIIIlIllIll, IlllllIlIllIIIIIlI)

                    elif IlIlllllIIlIlIlllI == 'Website':

                        print(Fore.CYAN + str(current_date) +  f'{llllIIlIIIIlIIIIlI} Is response with 100 online not playing' + Style.RESET_ALL)

                        lllllllIlIlIllIIll(llIIlIllllIlllllIl)

                        time.sleep(2)

                        llllIIlIIIIIIlIIII(llIIlIllllIlllllIl, lIIIIlllIIIlIllIll, IlllllIlIllIIIIIlI)

                    else:

                        print(Fore.YELLOW + str(current_date) +  f'{llllIIlIIIIlIIIIlI} Is response with 101 online not playing' + Style.RESET_ALL)

                    time.sleep(5)

                if lllIIIIlIIIIlIIIll - IlIIIllIlllllIIlII >= IlIlllIllIlllIIIII:

                    print('Time has reached the limit, bypassing!')

                    for (llIIlIllllIlllllIl, llllIlIIIIllIlllII) in lIIllIIlllllIllIII:

                        if IlIIlIlIIllIIIIllI == '1':

                            llllllIIlIlIllllII = lIIIIIllIIllllIllI(llllIlIIIIllIlllII)

                        elif IlIIlIlIIllIIIIllI == '2':

                            llllllIIlIlIllllII = lllllIIllIIIIIllIl(IllllIlIIllllllIIl(llIIlIllllIlllllIl))

                        if llllllIIlIlIllllII:

                            try:

                                lIlllIllIllIllIIll = requests.get(llllllIIlIlIllllII)

                                if lIlllIllIllIllIIll.status_code == 200:

                                    IIIlIllIIIIlIlllll = lIlllIllIllIllIIll.json()

                                    print(Fore.GREEN + f'{llllIIlIIIIlIIIIlI}: Successfully bypassed, enjoy!' + Style.RESET_ALL)

                                else:

                                    print(Fore.RED + f'{llllIlIIIIllIlllII}: Failed bypassing please try again later.' + Style.RESET_ALL)
                            
                            except Exception as IIIlIIllIlIlIlIllI:

                                print(Fore.RED + f'Unexpected error please try again.' + Style.RESET_ALL)

                    IlIIIllIlllllIIlII = lllIIIIlIIIIlIIIll

                time.sleep(120)

        elif IIIIlIlIllIllIIlIl == '5':

            lllIIlIIlIIlIIllll()

        elif IIIIlIlIllIllIIlIl == '6':

            manage_roblox_packages()
            
        elif IIIIlIlIllIllIIlIl == '7':

            global lllIIIIIlIllIIllIl

            lllIIIIIlIllIIllIl = True

            break

if __name__ == '__main__':
    
    apalah = Write.Input("Enter your License : ", Colors.blue_to_cyan, interval=0.07)


    if apalah in sigmajir:
        IlllllllIlIlllllII()
    else:
        print("Key Salah ajg")
